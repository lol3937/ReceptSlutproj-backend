{"version":3,"sources":["Login/Login.js","Data/GetRecept.js","Website/Start.js","Recepts/ChokladMouse.js","Recepts/VitChoklad.js","Recepts/MintChoklad.js","Website/App.js","serviceWorker.js","index.js"],"names":["Login","props","className","aria-haspopup","aria-controls","aria-hidden","id","role","htmlFor","type","onClick","navigate","URL","getReceptData","a","fetch","method","headers","result","json","getReceptData2","getReceptData3","postReceptData","data","body","JSON","stringify","Start","React","useState","ShowModal","setShowModal","modal","rData","setData","instruction","document","getElementById","value","ingredienser","closeModal","placeholder","aria-label","href","src","Chokladmouse","ingrediens","map","mängd","name","VitChoklad","twodata","MintChoklad","treedata","App","page","setPage","undefined","currentData","settCurrentData","Startpage","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12c70feb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function Login(props) {\r\n  function Back() {\r\n    props.navigate(0);\r\n  }\r\n  return <div className=\"dropdown\">\r\n    <div className=\"dropdown-trigger\">\r\n      <button className=\"button\" aria-haspopup=\"true\" aria-controls=\"dropdown-menu3\">\r\n        <span>Log in</span>\r\n        <span className=\"icon is-small\">\r\n          <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\r\n        </span>\r\n      </button>\r\n    </div>\r\n    <div className=\"dropdown-menu\" id=\"dropdown-menu3\" role=\"menu\">\r\n      <div className=\"dropdown-content\">\r\n        <p><label className=\"uname\" htmlFor=\"uname\"><b>Username: </b> </label>\r\n          <input type=\"text\" id=\"rusername\"></input></p>\r\n\r\n        <p><label className=\"psw\" htmlFor=\"psw\"><b>Password: </b></label>\r\n          <input type=\"password\" id=\"rpassword\"></input></p>\r\n        <button type=\"submit\" onClick={Back}>Logga in</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n}","/**\r\n * Data från backend\r\n */\r\nlet URL = \"http://localhost:8080/Receptslutproj/resources/\";\r\n\r\nexport async function getReceptData() {\r\n\r\n  const result = await fetch(URL + \"recept?id=1\", {\r\n    method: \"GET\",\r\n    headers: {\r\n\r\n    }\r\n  });\r\n\r\n  return await result.json();\r\n}\r\n\r\n\r\n\r\n//instruktion för vitChocklad\r\nexport async function getReceptData2() {\r\n\r\n  const result = await fetch(URL + \"recept?id=2\", {\r\n    method: \"GET\",\r\n    headers: {\r\n\r\n    }\r\n  });\r\n\r\n  return await result.json();\r\n}\r\n\r\n\r\n\r\nexport async function getReceptData3() {\r\n\r\n  const result = await fetch(URL + \"recept?id=3\", {\r\n    method: \"GET\",\r\n    headers: {\r\n\r\n    }\r\n  });\r\n\r\n  return await result.json();\r\n}\r\n\r\nexport async function postReceptData(data) {\r\n  fetch(\"/Receptslutproj/resources/recept\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Authorization': \"basic\",\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(data)\r\n  })\r\n\r\n}\r\n\r\n\r\nexport async function deleteReceptData(id) {\r\n  fetch(\"/Receptslutproj/resources/recept?id=\" + id, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      'Authorization': \"Basic\",\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  })\r\n\r\n}","import React from \"react\";\r\nimport { Login } from \"../Login/Login.js\";\r\nimport { getReceptData, getReceptData2, getReceptData3, postReceptData } from \"../Data/GetRecept\";\r\n\r\nexport function Start(props) {\r\n\r\n\r\n  const [ShowModal, setShowModal] = React.useState(false);\r\n  let modal = \"modal\";\r\n  if (ShowModal === true) {\r\n    modal = \"modal is-active\";\r\n  }\r\n\r\n  //Navigerar till receptet när man klickar på bilden\r\n  async function GotoChokladmouse() {\r\n    const rData = await getReceptData();\r\n    props.setData(rData);\r\n    props.navigate(1)\r\n  }\r\n\r\n  async function GotoVitChoklad() {\r\n    const rData = await getReceptData2();\r\n    props.setData(rData);\r\n    props.navigate(2)\r\n  }\r\n\r\n  async function GotoMintChoklad() {\r\n    const rData = await getReceptData3();\r\n    props.setData(rData);\r\n    props.navigate(3)\r\n  }\r\n\r\n  //Om man lägger till ett recept, modal stängs och recept läggs till\r\n  async function AddRecept() {\r\n    const instruction = document.getElementById(\"Instruktion\").value;\r\n    const ingredienser = document.getElementById(\"ingredienser\").value;\r\n    const addData = {\r\n      id: 0,\r\n      instruction,\r\n      ingredienser\r\n    }\r\n    postReceptData(addData);\r\n    closeModal();\r\n  }\r\n\r\n\r\n  function openModal() {\r\n    setShowModal(true);\r\n  }\r\n\r\n  function closeModal() {\r\n    setShowModal(false);\r\n  }\r\n\r\n  return (<div className>\r\n    <header><h1>Efterätt</h1><Login /></header>\r\n\r\n    <p>Välkommen till denna sajt. Här kan du hitta olika recept på efterrätter.<br />Vill du lägga in, ta bort eller ändra ditt/dina recept så måste du logga in.<br></br>\r\n          klicka på knappen \"logga in\" för att logga in.<br></br>Vill du registrera dig klickar du där också, skriv in avn och lösen och klickar på\"ny användare\"</p>\r\n    <button onClick={openModal}>Lägg till recept</button><br></br>\r\n    <div className={modal}>\r\n      <div className=\"modal-background\" />\r\n      <div className=\"modal-content\">\r\n        <input className=\"input\" id=\"steg\" type=\"text\" placeholder=\"Steg för steg\" />\r\n        <input className=\"input\" id=\"ingredienser\" type=\"text\" placeholder=\"Ingredienser\" />\r\n        <button type=\"button\" className=\"ClickAdd\" onClick={AddRecept}>Lägg till</button>\r\n        <button type=\"button\" className=\"AddImg\" onClick={\"\"}>Infogra bild</button>\r\n      </div>\r\n      <button className=\"modal-close is-large\" onClick={closeModal} aria-label=\"close\">modal</button>\r\n    </div>\r\n\r\n    <div className=\"kategorier\">\r\n      <a href=\"\">Choklad</a>\r\n    </div>\r\n    <div className=\"Allarecept\">\r\n      <figure className=\"Chokladmouse\">\r\n        <p>Chokladmouse</p>\r\n        <img src=\"Mouse.jpg\" onClick={GotoChokladmouse}></img>\r\n      </figure>\r\n      <figure className=\"VitChoklad\">\r\n        <p>VitChoklad</p>\r\n        <img src=\"VitChoklad.jpg\" onClick={GotoVitChoklad}></img>\r\n      </figure>\r\n      <figure className=\"MintChoklad\">\r\n        <p>MintChoklad</p>\r\n        <img src=\"MintChoklad.jpg\" onClick={GotoMintChoklad}></img>\r\n      </figure>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Start;","import React from \"react\";\r\nimport { Login } from \"../Login/Login.js\";\r\n\r\n\r\nexport function Chokladmouse(props) {\r\n  function Back() {\r\n    props.navigate(0)\r\n  }\r\n  return <div className=\"HeaderChoklad\">\r\n    <header><h1>Chokladmouse<button className=\"Back\" onClick={Back}>Tillbaka</button></h1><Login /></header>\r\n    <h2>GÖR SÅHÄR</h2>\r\n    <div>\r\n      {props.data.instruction}\r\n    </div>\r\n    <br></br>\r\n    <h2>INGREDIENSER</h2>\r\n\r\n    <div>\r\n      {props.data ? props.data.ingrediens.map(mängd => <div>{mängd.name}:{mängd.mängd}</div>) : false}\r\n    </div>\r\n    <br></br>\r\n    <article className=\"media\">\r\n      <div className=\"media-content\">\r\n        <div className=\"field\">\r\n          <p className=\"control\"><textarea className=\"textarea\" placeholder=\"Add a comment...\"></textarea></p>\r\n        </div>\r\n        <nav className=\"level\">\r\n          <div className=\"level-left\">\r\n            <div className=\"level-item\">\r\n              <a className=\"button is-info\">Submit</a>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-right\">\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </article>\r\n  </div>\r\n}\r\nexport default Chokladmouse;","import React from \"react\";\r\nimport { Login } from \"../Login/Login.js\";\r\n\r\nexport function VitChoklad(props) {\r\n\r\n  function Back() {\r\n    props.navigate(0)\r\n  }\r\n\r\n  return <div className=\"HeaderVit\">\r\n    <header><h1>VitChoklad</h1><Login /><button className=\"Back\" onClick={Back}>Tillbaka</button></header>\r\n    <h2 className=\"DoThis\">GÖR SÅHÄR</h2>\r\n    <div>\r\n      {props.twodata.instruction}\r\n    </div>\r\n    <br></br>\r\n    <h2>INGREDIENSER</h2>\r\n    <div>\r\n      {props.twodata ? props.twodata.ingrediens.map(mängd => <div>{mängd.name}:{mängd.mängd}</div>) : false}\r\n    </div>\r\n    <br></br>\r\n    <article className=\"media\">\r\n      <div className=\"media-content\">\r\n        <div className=\"field\">\r\n          <p className=\"control\"><textarea className=\"textarea\" placeholder=\"Add a comment...\"></textarea></p>\r\n        </div>\r\n        <nav className=\"level\">\r\n          <div className=\"level-left\">\r\n            <div className=\"level-item\">\r\n              <a className=\"button is-info\">Submit</a>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-right\">\r\n\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </article>\r\n  </div>\r\n}","import React from \"react\";\r\nimport { Login } from \"../Login/Login.js\";\r\n\r\nexport function MintChoklad(props) {\r\n\r\n  function Back() {\r\n    props.navigate(0)\r\n  }\r\n\r\n  return <div className=\"HeaderMint\">\r\n    <header><h1>Mintchocklad</h1><Login /><button className=\"Back\" onClick={Back}>Tillbaka</button></header>\r\n    <h2>GÖR SÅHÄR</h2>\r\n    <div>\r\n      {props.treedata.instruction}\r\n    </div>\r\n    <br></br>\r\n    <h2>INGREDIENSER</h2>\r\n    <div>\r\n      {props.treedata ? props.treedata.ingrediens.map(mängd => <div>{mängd.name}:{mängd.mängd}</div>) : false}\r\n    </div>\r\n    <br></br>\r\n    <article className=\"media\">\r\n      <div className=\"media-content\">\r\n        <div className=\"field\">\r\n          <p className=\"control\"><textarea className=\"textarea\" placeholder=\"Add a comment...\"></textarea></p>\r\n        </div>\r\n        <nav className=\"level\">\r\n          <div className=\"level-left\">\r\n            <div className=\"level-item\">\r\n              <a className=\"button is-info\">Submit</a>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-right\">\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </article>\r\n  </div>\r\n}","import React from 'react';\r\n\r\nimport { Start } from \"./Start\";\r\nimport '../Sass/App.scss';\r\nimport { Chokladmouse } from '../Recepts/ChokladMouse';\r\nimport { VitChoklad } from '../Recepts/VitChoklad';\r\nimport { MintChoklad } from '../Recepts/MintChoklad';\r\n\r\n/**\r\n * @param {object} props\r\n * @param {function} ontransitionstart.onNavigate\r\n */\r\n\r\n\r\nfunction App(props) {\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [currentData, settCurrentData] = React.useState(undefined);\r\n  function navigate(id) {\r\n    setPage(id);\r\n  }\r\n\r\n  let Startpage = null;\r\n  if (page === 0)\r\n    Startpage = <Start navigate={navigate} setData={settCurrentData} />\r\n  else if (page === 1)\r\n    Startpage = <Chokladmouse navigate={navigate} data={currentData} />;\r\n  else if (page === 2)\r\n    Startpage = <VitChoklad navigate={navigate} twodata={currentData} />;\r\n  else if (page === 3)\r\n    Startpage = <MintChoklad navigate={navigate} treedata={currentData} />;\r\n\r\n  return <div>\r\n    {Startpage}\r\n  </div>\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Website/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}